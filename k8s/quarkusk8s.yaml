apiVersion: v1
kind: Service
metadata:
  name: quarkus
  namespace: q8s
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    deployment: quarkusk8s
    type: component
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quarkusk8s
    type: component
  name: quarkusk8s
  namespace: q8s
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: quarkusk8s
      type: component
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: quarkusk8s
        type: component
    spec:
      containers:
        - env:
            - name: POD_APP_LABEL
              value: quarkusk8s
          image: zinnsoldat/quarkusk8s:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /quarkusk8s
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 600
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: quarkusk8s
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /quarkusk8s
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 800Mi
            requests:
              memory: 800Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    app: quarkusk8s
    type: component
  name: quarkusk8s
  namespace: q8s
spec:
  rules:
    - host: ${INGRESS_HOST}
      http:
        paths:
          - backend:
              serviceName: quarkus
              servicePort: 8080
            path: /